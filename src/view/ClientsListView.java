
package view;

import DAO.ClientDAO;
import controller.ClientsRegister;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Priscila
 */


public class ClientsListView extends javax.swing.JFrame {
    
    List<ClientsRegister> clientsList;

    /**
     * Creates new form CustomerListView
     */
    public ClientsListView() {
        initComponents();
        createClientList();
        
    }
     public void createClientList() {
         
         createClientList(null);
         
     }
    public void createClientList(ClientsRegister clientSearch) {
        
        // *** Here is gonna print out the clients on the view ***
        if (clientSearch == null) {
            clientsList = ClientDAO.list();
        }else{
            clientsList = ClientDAO.list(clientSearch);
        }
      
        DefaultTableModel content = (DefaultTableModel)jTableClients.getModel();
        
        // *** Update the list ***
        content.setRowCount(0);
        for(ClientsRegister c: clientsList){
            Object[] row = {
                c.getIdMembership(),
                c.getName(),
                c.getEmail(),
                c.getBankName(),
                c.getBankCard(),
                c.getPlanType().getPlanName(),
                c.getPlanStatus(),
                c.getBalance(),
                c.getBonus(),
                c.getNotes()
            };
            content.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClients = new javax.swing.JTable();
        jLSearch = new javax.swing.JLabel();
        jTextSearch = new javax.swing.JTextField();
        jLImg = new javax.swing.JLabel();
        jBOkClientL = new javax.swing.JButton();
        jBClose = new javax.swing.JButton();
        jBgotoRentPage = new javax.swing.JButton();
        jBDelete = new javax.swing.JButton();
        jBEdit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("*** Ultra-Vision Rental Media ***");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("CLIENTS LIST"));

        jTableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "IDMembership:", "Name:", "E-mail:", "Bank Name:", "IBAN:", "Plan Type:", "Status:", "Balance:", "bonus:", "Notes:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableClients);

        jLSearch.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLSearch.setText("Search for Nane or ID:");

        jTextSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSearchActionPerformed(evt);
            }
        });
        jTextSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextSearchKeyReleased(evt);
            }
        });

        jLImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/dvd-icon.png"))); // NOI18N

        jBOkClientL.setText("Ok");
        jBOkClientL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOkClientLActionPerformed(evt);
            }
        });

        jBClose.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jBClose.setText("Close");
        jBClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCloseActionPerformed(evt);
            }
        });

        jBgotoRentPage.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jBgotoRentPage.setText("Go to the Rent Page");
        jBgotoRentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBgotoRentPageActionPerformed(evt);
            }
        });

        jBDelete.setText("Delete");
        jBDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteActionPerformed(evt);
            }
        });

        jBEdit.setText("Edit");
        jBEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBOkClientL))
                    .addComponent(jLSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jLImg, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBgotoRentPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addComponent(jLSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBOkClientL))
                        .addGap(102, 102, 102))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLImg, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(11, 11, 11)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jBgotoRentPage))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBEdit)
                            .addComponent(jBDelete))))
                .addGap(18, 18, 18)
                .addComponent(jBClose))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteActionPerformed
        // TODO add your handling code here:

        //*** Delete data process *** 
        
        // *** Check if any row was selected: ***
        int row = jTableClients.getSelectedRow();
        if (row > -1) {
         ClientsRegister client = clientsList.get(row);
        int option = JOptionPane
        .showConfirmDialog(this, "Do you want to delete",
            "data deleted confirmation", JOptionPane.YES_NO_OPTION);
        
       // *** Here is going to get the idMedia and delete it from the database. ***
        if (option == JOptionPane.YES_OPTION){
            if (ClientDAO.delete(client.getIdMembership())) {
                JOptionPane.showMessageDialog(this, "deleted");
                
       // *** update the list ***
                createClientList();
            }else{
                JOptionPane.showMessageDialog(this, "Error ");
            }     
        }
          
        }else{
            JOptionPane.showMessageDialog(this, "Select a row to delete");
        }
    }//GEN-LAST:event_jBDeleteActionPerformed

    private void jBgotoRentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBgotoRentPageActionPerformed
        // TODO add your handling code here:
        
        // *** Here is going to sent to the rentProcessView windows. ***
        int row = jTableClients.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "select a row ");
        }else{
            ClientsRegister client = this.clientsList.get(row);
        
        RentProcessView rent = new RentProcessView(null);// fiz05/05 ver se esta certo
        rent.setClient(client);
        
        // *** Close the window ***
        rent.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        rent.setVisible(true);
        //rent.setEnabled(false);
        
        }
    }//GEN-LAST:event_jBgotoRentPageActionPerformed

    private void jBCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCloseActionPerformed
        // TODO add your handling code here:
          dispose();
      
    }//GEN-LAST:event_jBCloseActionPerformed

    private void jBEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditActionPerformed
        // TODO add your handling code here:
        // *** Update process ***
        
        // *** Select the row to edit: ***
        int row = jTableClients.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "select a row ");
        }else{
            ClientsRegister client = this.clientsList.get(row);
         
        //*** sent to the edit clientsList page ***
        RegisterClientView editPage = new RegisterClientView(this);
        editPage.setClient(client);
        editPage.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        editPage.setVisible(true);
        
        }
    }//GEN-LAST:event_jBEditActionPerformed

    private void jTextSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSearchActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextSearchActionPerformed

    private void jBOkClientLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOkClientLActionPerformed
        // TODO add your handling code here:
        
        // *** Here is going to refresh the window ***
        loadData();
    }//GEN-LAST:event_jBOkClientLActionPerformed
       
    private void jTextSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchKeyPressed
        // TODO add your handling code here:
        
        // *** Here is going to active the enter on the keyboard ***
        if (evt.getKeyCode()==10) {
         jBOkClientLActionPerformed(null);
        }
    }//GEN-LAST:event_jTextSearchKeyPressed

    private void jTextSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchKeyReleased
        // TODO add your handling code here:
        
         // *** Here is going to refresh the the list ***
         if (jTextSearch.getText().isEmpty()) {
            loadData();
        }
    }//GEN-LAST:event_jTextSearchKeyReleased
    public void loadData(){
        
        // *** Search clientsList process ***
        ClientsRegister clientSearch = new ClientsRegister();
        clientSearch.setName(jTextSearch.getText());
        
        // *** Here is converting String to int ***
        try {
            int idMembership = Integer.parseInt(jTextSearch.getText());
            clientSearch.setIdMembership(String.valueOf(idMembership));
            
        } catch (Exception e) {
            
        }
         createClientList(clientSearch);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientsListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientsListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientsListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientsListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientsListView().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBClose;
    private javax.swing.JButton jBDelete;
    private javax.swing.JButton jBEdit;
    private javax.swing.JButton jBOkClientL;
    private javax.swing.JButton jBgotoRentPage;
    private javax.swing.JLabel jLImg;
    private javax.swing.JLabel jLSearch;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClients;
    private javax.swing.JTextField jTextSearch;
    // End of variables declaration//GEN-END:variables

    
}
