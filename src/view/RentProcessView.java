package view;

import DAO.MovieDAO;
import DAO.MusicDAO;
import DAO.RentDAO;
import DAO.TvDAO;
import Model.BoxSet;
import Model.Media;
import Model.Movie;
import Model.Music;
import controller.ClientsRegister;
import controller.RentRegister;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcelo
 */
public class RentProcessView extends javax.swing.JFrame {

    private ClientsRegister client = new ClientsRegister();
    private List<Object> mediaList = new ArrayList<Object>();
    private float balance = 0;

    // *** Here is going to bring all clients details to the rent page. ***
    public void setClient(ClientsRegister client) {
        this.client = client;
        jTextName.setText(client.getName());
        jTextEmail.setText(client.getEmail());
        jTextPlanType.setText(String.valueOf(client.getPlanType().getPlanName()));
        jTextStatus.setText(client.getPlanStatus());
        jTextBonus.setText(String.valueOf(client.getBonus()));
        jTextAreaNotes.setText(client.getNotes());

        jTextId.setVisible(true);
        jLId.setVisible(true);
        jTextId.setText(client.getIdMembership());

        if (client.getBonus() < 100) {
            jBRedeem.setVisible(false);
        }
    }

    /**
     * Creates new form RentProcessView
     */
    public RentProcessView(RentProcessView clientDetails) {
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        initComponents();
        // *** Here is going to block the fields to be editable on the RentP. windows. ***
        jTextId.setVisible(true);
        jTextId.setEditable(false);
        jLId.setVisible(true);
        jTextName.setEditable(false);
        jTextEmail.setEditable(false);
        jTextPlanType.setEditable(false);
        jTextStatus.setEditable(false);
        jTextBonus.setEditable(false);

        //  this.clientDetails = clientDetails;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLId = new javax.swing.JLabel();
        jTextId = new javax.swing.JTextField();
        jLClient = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLidMedia = new javax.swing.JLabel();
        jLEmail = new javax.swing.JLabel();
        jTextEmail = new javax.swing.JTextField();
        jLDateOut = new javax.swing.JLabel();
        jLReturn = new javax.swing.JLabel();
        jLPlanType = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextPlanType = new javax.swing.JTextField();
        jTextStatus = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRent = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaNotes = new javax.swing.JTextArea();
        jLNotes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextBonus = new javax.swing.JTextField();
        jBRedeem = new javax.swing.JButton();
        jLBalance = new javax.swing.JLabel();
        jTextBalance = new javax.swing.JTextField();
        jBPay = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jButtonAddMedia = new javax.swing.JButton();
        jTextidMedia = new javax.swing.JFormattedTextField();
        jButtonDeleteMedia = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jTextDateOut = new javax.swing.JFormattedTextField();
        jTextDateReturn = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("***  ULTRA-VISION MEDIA  ***");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("RENT PROCESS"));

        jLId.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLId.setText("IDMembership: ");

        jLClient.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLClient.setText("Client: ");

        jLidMedia.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLidMedia.setText("ID Media: ");

        jLEmail.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLEmail.setText("Email: ");

        jLDateOut.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLDateOut.setText("DateOut: ");

        jLReturn.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLReturn.setText("Return Date:");

        jLPlanType.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLPlanType.setText("Plan Type: ");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel2.setText("Status: ");

        jTableRent.setAutoCreateRowSorter(true);
        jTableRent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDMedia:", "Media Type:", "Price:", "Notes:"
            }
        ));
        jScrollPane1.setViewportView(jTableRent);

        jTextAreaNotes.setColumns(20);
        jTextAreaNotes.setRows(5);
        jTextAreaNotes.setPreferredSize(new java.awt.Dimension(164, 60));
        jScrollPane2.setViewportView(jTextAreaNotes);

        jLNotes.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLNotes.setText("Notes:");

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel1.setText("Bonus:");

        jBRedeem.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jBRedeem.setText("Redeem");
        jBRedeem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRedeemActionPerformed(evt);
            }
        });

        jLBalance.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLBalance.setForeground(new java.awt.Color(255, 0, 0));
        jLBalance.setText("BALANCE:");

        jBPay.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jBPay.setText("Pay");
        jBPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPayActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButtonAddMedia.setText("Add Media");
        jButtonAddMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddMediaActionPerformed(evt);
            }
        });

        jTextidMedia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));

        jButtonDeleteMedia.setText("Delete Media");
        jButtonDeleteMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteMediaActionPerformed(evt);
            }
        });

        try {
            jTextDateOut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextDateReturn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextDateReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDateReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextId, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLPlanType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBRedeem))
                                    .addComponent(jTextPlanType)
                                    .addComponent(jTextName)
                                    .addComponent(jTextEmail)
                                    .addComponent(jTextStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLNotes)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLidMedia)
                                                        .addGap(32, 32, 32)
                                                        .addComponent(jTextidMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLReturn)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jTextDateReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLDateOut)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jTextDateOut, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(33, 33, 33))
                                            .addComponent(jSeparator4))
                                        .addGap(10, 10, 10)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLBalance)
                                            .addComponent(jBPay, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(396, 396, 396))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jButtonAddMedia)
                                .addGap(50, 50, 50)
                                .addComponent(jButtonDeleteMedia)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLId)
                            .addComponent(jTextId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLClient))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLEmail)
                            .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLPlanType)
                            .addComponent(jTextPlanType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLidMedia)
                                    .addComponent(jTextidMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLDateOut)
                                    .addComponent(jTextDateOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLReturn)
                                    .addComponent(jTextDateReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLNotes))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLBalance)
                                .addGap(18, 18, 18)
                                .addComponent(jTextBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBPay)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBRedeem)
                                    .addComponent(jTextBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAddMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDeleteMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMediaActionPerformed
        // TODO add your handling code here:

        /* Here is going to check if the media field is empty, trim is going to take 
       out all space typed, and it is going to check how many medias was selected. */
        if (jTextidMedia.getText() != null && jTextidMedia.getText().trim().isEmpty() == false) {
            if (mediaList.size() == 4) {
                JOptionPane.showMessageDialog(this, " You already have 4 Medias selected ");
                return;
            }
            if (jTextDateOut.getValue() == null) {
                JOptionPane.showMessageDialog(this, " Enter with a date ");
                return;

            }
            if (jTextDateReturn.getValue() == null) {
                JOptionPane.showMessageDialog(this, " Enter with a date ");
                return;

            }
            int idmedia = Integer.parseInt(jTextidMedia.getText().trim());
            if (addMovieById(idmedia) == false && addMusicById(idmedia) == false
                    && addBoxSetById(idmedia) == false) {
                return;
            }

        } else {
            JOptionPane.showMessageDialog(this, " Media Id required ");
        }

    }//GEN-LAST:event_jButtonAddMediaActionPerformed

    private void jButtonDeleteMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteMediaActionPerformed
        // TODO add your handling code here:

        int line = jTableRent.getSelectedRow();
        if (line == -1) {

            JOptionPane.showMessageDialog(null, " Select a media to delete.");
        } else {

            int option = JOptionPane
                    .showConfirmDialog(this, "Do you want to delete",
                            "data deleted confirmation", JOptionPane.YES_NO_OPTION);

            // *** Here is going to get the idMedia and delete it from the database. ***
            if (option == JOptionPane.YES_OPTION) {
                Media m = (Media) mediaList.get(line);
                setBalance(-m.getPrice());

                mediaList.remove(line);
                DefaultTableModel table = (DefaultTableModel) jTableRent.getModel();
                // Aqui apaga todas as linhas e add elas novamente.
                /*  table.setRowCount(0);
                        for(Object o : mediaList){
                         Media m = (Media)o;
                        Object [] row = {
                        m.getIdMedia(),
                        m.getMediaType(),
                        jTextDateOut.getText(),
                        jTextDateReturn.getText(),
                        jTextAreaNotes.getText(),
                            
                        };
                       // *** Adding data on the mediaList ***  
                        table.addRow(row);
                      
                    }  */
                // Aqui só apaga as linhas
                table.removeRow(line);
            }
        }

    }//GEN-LAST:event_jButtonDeleteMediaActionPerformed

    private void jTextDateReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDateReturnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDateReturnActionPerformed

    private void jBRedeemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRedeemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBRedeemActionPerformed

    private void jBPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPayActionPerformed
        // TODO add your handling code here:
        if (mediaList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Add a media.");
        } else {
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            try {
                RentRegister r = new RentRegister();
                r.setClient(client);
                r.setDateOut(df.parse(jTextDateOut.getText()));
                r.setDateReturn(df.parse(jTextDateReturn.getText()));
                r.setMedia(mediaList);
                if (RentDAO.insert(r)) {
                    JOptionPane.showMessageDialog(this, "Sucess");
                    dispose();

                } else {
                    JOptionPane.showMessageDialog(this, "Error execute payment");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error execute payment");
            }

        }
    }//GEN-LAST:event_jBPayActionPerformed
    private void clearAfterAdd() {
        // *** Cleaning all fields ***  

        jTextAreaNotes.setText("");
        jTextidMedia.setText("");

    }

    private void setBalance(float balance) {
        this.balance += balance;
        jTextBalance.setText(String.valueOf(this.balance));
    }

    private boolean addMovieById(int idmedia) {

        /* This method is going to check client`s plan, and check if the media selected can 
        be rented by this client. */
        Movie movie = MovieDAO.getMovieById(idmedia);
        if (movie.getIdMedia() != null) {

            // id 4: Premiun // id 3: Movie lovers
            // Check plan type by planId, if the client has 4 or 3, he can rent the media. 
            if (client.getPlanType().getIdPlan() == 4 || client.getPlanType().getIdPlan() == 3) {

                // *** Here is the rental table details ***
                DefaultTableModel table = (DefaultTableModel) jTableRent.getModel();
                Object[] row = {
                    movie.getIdMedia(),
                    movie.getMediaType(),
                    movie.getPrice(),
                    jTextAreaNotes.getText(),};
                // *** Adding data on the mediaList ***  
                table.addRow(row);
                mediaList.add(movie);
                setBalance(movie.getPrice());

                // *** Cleaning all fields *** 
                clearAfterAdd();

                return true;

            } else {
                // Error if clients try to rent a media that doesnt below their plan type.
                JOptionPane.showMessageDialog(this, " Your Plan Type can not allow you to rent this media");
            }

        }
        return false;

    }

    private boolean addMusicById(int idmedia) {
        Music music = MusicDAO.getMusicById(idmedia);
        if (music.getIdMedia() != null) {

            // id 4: Premiun // id 1:  Music lovers
            // Check plan type by planId, if the client has 4 or 1, he can rent the media. 
            if (client.getPlanType().getIdPlan() == 4 || client.getPlanType().getIdPlan() == 1) {
                // *** Here is the rental table details ***
                DefaultTableModel table = (DefaultTableModel) jTableRent.getModel();
                Object[] row = {
                    music.getIdMedia(),
                    music.getMediaType(),
                    music.getPrice(),
                    jTextAreaNotes.getText(),};
                // *** Adding data on the mediaList ***      
                table.addRow(row);
                mediaList.add(music);
                setBalance(music.getPrice());

                // *** Cleaning all fields ***     
                clearAfterAdd();

                return true;

            } else {
                // Error if clients try to rent a media that doesnt below their plan type.
                JOptionPane.showMessageDialog(this, " Your Plan Type can not allow you to rent this media");
            }

        }
        return false;

    }

    private boolean addBoxSetById(int idmedia) {
        BoxSet tv = TvDAO.getTvById(idmedia);
        if (tv.getIdMedia() != null) {

            // id 4: Premiun // id 2:tv lovers
            // Check plan type by planId, if the client has 4 or 1, he can rent the media. 
            if (client.getPlanType().getIdPlan() == 4 || client.getPlanType().getIdPlan() == 2) {
                // *** Here is the rental table details ***
                DefaultTableModel table = (DefaultTableModel) jTableRent.getModel();
                Object[] row = {
                    tv.getIdMedia(),
                    tv.getMediaType(),
                    tv.getPrice(),
                    jTextAreaNotes.getText(),};
                // *** Adding data on the mediaList ***        
                table.addRow(row);
                mediaList.add(tv);
                setBalance(tv.getPrice());

                // *** Cleaning all fields ***   
                clearAfterAdd();
                return true;

            } else {
                // Error if clients try to rent a media that doesnt below their plan type.
                JOptionPane.showMessageDialog(this, " Your Plan Type can not allow you to rent this media");
            }

        }
        return false;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentProcessView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentProcessView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentProcessView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentProcessView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentProcessView(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBPay;
    private javax.swing.JButton jBRedeem;
    private javax.swing.JButton jButtonAddMedia;
    private javax.swing.JButton jButtonDeleteMedia;
    private javax.swing.JLabel jLBalance;
    private javax.swing.JLabel jLClient;
    private javax.swing.JLabel jLDateOut;
    private javax.swing.JLabel jLEmail;
    private javax.swing.JLabel jLId;
    private javax.swing.JLabel jLNotes;
    private javax.swing.JLabel jLPlanType;
    private javax.swing.JLabel jLReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLidMedia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTableRent;
    private javax.swing.JTextArea jTextAreaNotes;
    private javax.swing.JTextField jTextBalance;
    private javax.swing.JTextField jTextBonus;
    private javax.swing.JFormattedTextField jTextDateOut;
    private javax.swing.JFormattedTextField jTextDateReturn;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextId;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPlanType;
    private javax.swing.JTextField jTextStatus;
    private javax.swing.JFormattedTextField jTextidMedia;
    // End of variables declaration//GEN-END:variables
}
